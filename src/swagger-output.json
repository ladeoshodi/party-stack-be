{
  "openapi": "3.1.0",
  "info": {
    "title": "Party Stack API with Swagger",
    "version": "1.0.0",
    "description": "This is the API documentation for Party Stack API",
    "license": {
      "name": "Licensed Under MIT",
      "url": "https://spdx.org/licenses/MIT.html"
    },
    "contact": {
      "name": "Lade Oshodi",
      "url": "https://github.com/ladeoshodi"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "User API"
    },
    {
      "name": "Games",
      "description": "Games API"
    }
  ],
  "paths": {
    "/user/register": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Register a new user",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userSchema"
              },
              "example": {
                "username": "swaggeruser",
                "email": "swaggeruser@example.com",
                "password": "#Passw0rd",
                "passwordConfirmation": "#Passw0rd"
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Login a user",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userSchema"
              },
              "example": {
                "email": "swaggeruser@example.com",
                "password": "#Passw0rd"
              }
            }
          }
        }
      }
    },
    "/user/": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get current user",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Update current user",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userSchema"
              },
              "example": {
                "username": "updatedswaggeruser",
                "email": "updatedswaggeruser@example.com",
                "password": "#Ch@ngePassw0rd"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Delete current user",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/games/": {
      "get": {
        "tags": [
          "Games"
        ],
        "description": "Get all games",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/games/{gameId}": {
      "get": {
        "tags": [
          "Games"
        ],
        "description": "Get a single game",
        "parameters": [
          {
            "name": "gameId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "userSchema": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "Username of user"
          },
          "email": {
            "type": "string",
            "example": "email of user"
          },
          "password": {
            "type": "string",
            "example": "password of user"
          }
        },
        "required": [
          "username",
          "email",
          "password"
        ]
      }
    },
    "securitySchemes": {
      "Authorization": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Authorization": []
    }
  ]
}